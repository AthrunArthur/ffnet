/*
 * utils.cpp
 *
 *  Created on: 2012-6-25
 *      Author: AthrunArthur
 */

#include "utils/utils.h"
#include "utils/codec_utils.h"
namespace utl
{
    uint64_t generateLongIntFromString(const String & str)
    {
        return generateLongIntFromString(str.c_str(), str.length());
    }

uint16_t	generateCheckSum(const char * content, uint32_t count)
{
	/* Compute Internet Checksum for "count" bytes
			*         beginning at location "addr".
			*/
	   register long sum = 0;
	   uint16_t chksum(0);

	   while( count > 1 )  {

		   /*  This is the inner loop */
			   sum += * (unsigned short *) content;
			   content += 2;
			   count -= 2;
	   }

		   /*  Add left-over byte, if any */
	   if( count > 0 )
			   sum += * (unsigned char *) content;


		   /*  Fold 32-bit sum to 16 bits */
	   while (sum>>16)
		   sum = (sum & 0xffff) + (sum >> 16);

	   chksum = ~sum;
	   return chksum;
}

uint64_t generateLongIntFromString(const char * str, int len)
{
	uint64_t t = 0;
	char *p = (char *)&t;
	for(int i = 0; i <len; ++i)
	{
		int c = CodecUtils::ctoi( str[i]);
		t = t*10 + c;
	}
	return t;
}


}
